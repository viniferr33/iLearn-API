{
  "openapi": "3.0.0",
  "info": {
    "title": "iLearn API",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "query",
        "name": "accessToken"
      }
    },
    "schemas": {
      "Student": {
        "type": "object",
        "required": ["id", "name", "email", "phone"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier for a student"
          },
          "name": {
            "type": "string",
            "description": "The name of the student"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the student"
          },
          "phone": {
            "type": "string",
            "format": "phone",
            "description": "The phone number of the student"
          }
        },
        "example": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com",
          "phone": "4002-8922"
        }
      },
      "StudentInput": {
        "type": "object",
        "required": ["name", "email", "phone", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the student"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the student"
          },
          "phone": {
            "type": "string",
            "format": "phone",
            "description": "The phone number of the student"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "The password of the student"
          }
        },
        "example": {
          "name": "John Doe",
          "email": "john.doe@example.com",
          "phone": "4002-8922",
          "password": "this1s4strongP@ssword"
        }
      },
      "HelpRequest": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "studentId",
          "status",
          "category"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "studentId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HelpRequestInput": {
        "type": "object",
        "required": ["title", "description", "studentId", "category"],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "studentId": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "Offer": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "studentId",
          "status",
          "price",
          "category"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "studentId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "float",
            "format": "float64"
          },
          "status": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OfferInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "studentId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "float",
            "format": "float64"
          },
          "category": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login with credentials",
        "description": "Receives the access token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "The password of the student"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the student"
                  }
                },
                "example": {
                  "email": "john.doe@example.com",
                  "password": "this1s4strongP@ssword"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["accessToken"],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "The accessToken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "summary": "Get all students",
        "description": "Retrieve a list of all students.",
        "responses": {
          "200": {
            "description": "A list of students",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new student",
        "description": "Create a new student with the given properties.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "summary": "Get a student by ID",
        "description": "Retrieve a single student by their unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the student to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "put": {
        "summary": "Update a student by ID",
        "description": "Update an existing student with the given properties.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the student to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "404": {
            "description": "Student not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a student by ID",
        "description": "Delete a single student by their unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the student to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Student deleted"
          },
          "404": {
            "description": "Student not found"
          }
        }
      }
    }
  }
}
